{"ast":null,"code":"var _jsxFileName = \"/Volumes/My Computer/React JS/React New/src/src new/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n\n  const [time, setTime] = useState(formatAMPM(new Date()));\n\n  const UpdateTime = () => {\n    function formatAMPM(date) {\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var ampm = hours >= 12 ? 'pm' : 'am';\n      hours = hours % 12;\n      hours = hours ? hours : 12;\n      minutes = minutes < 10 ? '0' + minutes : minutes;\n      var strTime = hours + ':' + minutes + ' ' + ampm;\n      return strTime;\n    }\n\n    setTime(formatAMPM(new Date()));\n  };\n\n  setInterval(UpdateTime, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"G4IqNIFQB0/WKi8fjU1iSs+C8KI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/My Computer/React JS/React New/src/src new/App.jsx"],"names":["React","useState","App","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","strTime","time","setTime","Date","UpdateTime","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;AACA,QAAIC,OAAO,GAAGH,IAAI,CAACI,UAAL,EAAd;AACA,QAAIC,IAAI,GAAGJ,KAAK,IAAI,EAAT,GAAc,IAAd,GAAqB,IAAhC;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,EAAxB;AACAE,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAIA,OAAnB,GAA6BA,OAAvC;AACA,QAAIG,OAAO,GAAGL,KAAK,GAAG,GAAR,GAAcE,OAAd,GAAwB,GAAxB,GAA8BE,IAA5C;AACA,WAAOC,OAAP;AACD;;AAGH,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeX,QAAQ,CAACE,UAAU,CAAC,IAAIU,IAAJ,EAAD,CAAX,CAA5B;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrB,aAASX,UAAT,CAAoBC,IAApB,EAA0B;AACtB,UAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;AACA,UAAIC,OAAO,GAAGH,IAAI,CAACI,UAAL,EAAd;AACA,UAAIC,IAAI,GAAGJ,KAAK,IAAI,EAAT,GAAc,IAAd,GAAqB,IAAhC;AACAA,MAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACAA,MAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,EAAxB;AACAE,MAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAIA,OAAnB,GAA6BA,OAAvC;AACA,UAAIG,OAAO,GAAGL,KAAK,GAAG,GAAR,GAAcE,OAAd,GAAwB,GAAxB,GAA8BE,IAA5C;AACA,aAAOC,OAAP;AACD;;AAEHE,IAAAA,OAAO,CAACT,UAAU,CAAC,IAAIU,IAAJ,EAAD,CAAX,CAAP;AACH,GAbD;;AAcAE,EAAAA,WAAW,CAACD,UAAD,EAAY,IAAZ,CAAX;AAEA,sBACI;AAAA,2BACE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAMH;;GArCQT,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction App() {\n    function formatAMPM(date) {\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12;\n        minutes = minutes < 10 ? '0'+minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        return strTime;\n      }\n   \n\n    const[time,setTime]=useState(formatAMPM(new Date()));\n    \n    const UpdateTime = () => {\n        function formatAMPM(date) {\n            var hours = date.getHours();\n            var minutes = date.getMinutes();\n            var ampm = hours >= 12 ? 'pm' : 'am';\n            hours = hours % 12;\n            hours = hours ? hours : 12;\n            minutes = minutes < 10 ? '0'+minutes : minutes;\n            var strTime = hours + ':' + minutes + ' ' + ampm;\n            return strTime;\n          }\n       \n        setTime(formatAMPM(new Date()));\n    };\n    setInterval(UpdateTime,1000)\n\n    return (\n        <>\n          <h1>{time}</h1>\n        </>\n\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}